on:
  pull_request:
    branches: [ test-local ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - if: endsWith(github.base_ref, 'master')
        run: |
          echo "ENVIRONMENT=prod" >> $GITHUB_ENV
      - if: endsWith(github.base_ref, 'feature')
        run: |
          echo "ENVIRONMENT=dev" >> $GITHUB_ENV
      - if: endsWith(github.base_ref, 'test-local')
        run: |
          echo "ENVIRONMENT=dev" >> $GITHUB_ENV

      - name: Set commit k8s repo msg & env variables
        env:
          GITHUB_SHA: ${{ github.sha }}
        run: |
          echo "COMMIT_MSG=Update from https://github.com/marketdesigners/auth-server/commit/$GITHUB_SHA" >> $GITHUB_ENV
          echo "DESTINATION_CUSTOMER=$ENVIRONMENT/customer-auth" >> $GITHUB_ENV
          echo "DESTINATION_PARTNER=$ENVIRONMENT/partner-auth" >> $GITHUB_ENV
          echo "DESTINATION_COMMON=$ENVIRONMENT/common-auth" >> $GITHUB_ENV
          echo "DESTINATION_BATCH=$ENVIRONMENT/batch-auth" >> $GITHUB_ENV
          echo "DESTINATION_ADMIN=$ENVIRONMENT/admin-auth" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Admin Build, tag and push image to Amazon ECR
        if: ${{ contains(github.event.pull_request.labels.*.name, 'admin') }}
        id: admin-build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPO: eks-admin-auth
          IMAGE_TAG: ${{ github.sha }}
        run: |
          ./gradlew clean :admin:buildNeeded --stacktrace --info -x test
          docker build --build-arg ENVIRONMENT=$ENVIRONMENT -t $ECR_REGISTRY/$ECR_REPO:$ENVIRONMENT-$IMAGE_TAG ./admin
          docker push $ECR_REGISTRY/$ECR_REPO:$ENVIRONMENT-$IMAGE_TAG
          echo "image=image: $ECR_REGISTRY/$ECR_REPO:$ENVIRONMENT-$IMAGE_TAG" >> "$GITHUB_OUTPUT"

      - name: Git config
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Check out k8 repo
        uses: actions/checkout@v4
        with:
          repository: marketdesigners/k8
          token: ${{ secrets.GTOKEN }}

      - if: ${{ contains(github.event.pull_request.labels.*.name, 'admin') }}
        run: sed -i -e 's@image:.*@${{ steps.admin-build-image.outputs.image }}@g' $DESTINATION_ADMIN/$ENVIRONMENT-resources.yaml

      - name: Commit and push
        run: |
          git add .
          git commit -m "$COMMIT_MSG"
          git push -f --set-upstream origin main